#
# Copyright (c) 2016-2019, NVIDIA CORPORATION.  All rights reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
CXXFLAGS += -g -std=c++11 -Wall -Wno-unknown-pragmas -Wno-unused-variable -Wno-unused-label
CFLAGS += -g -std=c++11 -Wall -Wno-unknown-pragmas -Wno-unused-variable -Wno-unused-label
TOT := $(abspath $(dir $(lastword $(MAKEFILE_LIST)))../)
ROOT ?= $(TOT)

# Location of submodules
CONNECTIONS_HOME = $(ROOT)/matchlib_connections
RAPIDJSON_HOME = $(ROOT)/rapidjson
MATCHLIB_HOME = $(ROOT)/matchlib/cmod

MGC_HOME = /usr/local/tools/mentor/Catapult_2021/Mgc_home

# PLEASE SET BOOST_HOME, SYSTEMC_HOME, CATAPULT_HOME to correct path 
BOOST_HOME = $(ROOT)/boost_home
SYSTEMC_HOME = $(ROOT)/systemc-2.3.1a
CATAPULT_HOME = $(MGC_HOME)
# 

AC_TYPES = $(ROOT)/ac_types
AC_SIMUTILS = $(ROOT)/ac_simutils
AC_MATH = $(ROOT)/ac_math

CC = g++
#LD_LIBRARY_PATH := $(if $(LD_LIBRARY_PATH),$(LD_LIBRARY_PATH):$(SYSTEMC_HOME)/lib:$(SYSTEMC_HOME)/lib-linux64:$(CATAPULT_HOME)/lib:$(CATAPULT_HOME)/shared/lib,$(CATAPULT_HOME)/lib:$(CATAPULT_HOME)/shared/lib:$(SYSTEMC_HOME)/lib:$(SYSTEMC_HOME)/lib-linux64)
#export LD_LIBRARY_PATH
export LD_LIBRARY_PATH="/lib64:/lib:${SYSTEMC_HOME}/lib:${SYSTEMC_HOME}/lib-linux64:${CATAPULT_HOME}/lib:${CATAPULT_HOME}/shared/lib"

LIBDIR ?=
LIBDIR += -L$(SYSTEMC_HOME)/lib -L$(SYSTEMC_HOME)/lib-linux64 -L$(CATAPULT_HOME)/lib -L$(CATAPULT_HOME)/shared/lib
CFLAGS += $(LIBDIR)

export CATAPULT_HOME SYSTEMC_HOME CONNECTIONS_HOME MATCHLIB_HOME BOOST_HOME RAPIDJSON_HOME AC_TYPES AC_SIMUTILS AC_MATH

INCDIR ?=

INCDIR += -I$(ROOT)/include
INCDIR += -I$(CONNECTIONS_HOME)/include
INCDIR += -I. -I$(SYSTEMC_HOME)/include -I$(SYSTEMC_HOME)/src
INCDIR += -I$(MATCHLIB_HOME)/include 
INCDIR += -I$(BOOST_HOME)/include/boost
INCDIR += -I$(RAPIDJSON_HOME)/include/rapidjson -I$(RAPIDJSON_HOME)
INCDIR += -I$(AC_TYPES)/include
INCDIR += -I$(AC_SIMUTILS)/include
INCDIR += -I$(AC_MATH)/include
#INCDIR += -I$(MATCHLIB_HOME)/include 

CFLAGS += $(INCDIR)


HLS_CATAPULT ?= 1
ifeq ($(HLS_CATAPULT),1)
  CFLAGS += -DHLS_CATAPULT
endif
#
LIBS ?=
LIBS += -lsystemc -lpthread

# SIM_MODE
# 0 = Synthesis view of Connections port and combinational code.
# 	This option can cause failed simulations due to SystemC's timing model.
# 1 = Cycle-accurate view of Connections port and channel code, CONNECTIONS_ACCURATE_SIM. (default)
# 2 = Faster TLM view of Connections port and channel code, CONNECTIONS_FAST_SIM.
SIM_MODE ?= 1
ifeq ($(SIM_MODE),1)
	USER_FLAGS += -DCONNECTIONS_ACCURATE_SIM -DSC_INCLUDE_DYNAMIC_PROCESSES
endif
ifeq ($(SIM_MODE),2)
	USER_FLAGS += -DCONNECTIONS_FAST_SIM -DSC_INCLUDE_DYNAMIC_PROCESSES
endif

# RAND_STALL
# 0 = Random stall of ports and channels disabled (default)
# 1 = Random stall of ports and channels enabled
#   This feature aids in latency insensitive design verication.
#   Note: Only valid if SIM_MODE = 1 (accurate) or 2 (fast)
ifeq ($(RAND_STALL),1)
	USER_FLAGS += -DCONN_RAND_STALL
endif

.PHONY: Build
Build: all

clean:
	rm -rf *.o sim_* dump.vcd
